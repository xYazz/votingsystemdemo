# Generated by Django 4.0.1 on 2022-02-03 14:14

import base.user.models
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('pesel', models.CharField(max_length=11, unique=True, validators=[base.user.models.validate_pesel])),
                ('social_status', models.PositiveSmallIntegerField(choices=[(1, 'Osoba pracująca'), (2, 'Emeryt/rencista'), (3, 'Uczeń/student'), (4, 'Osoba pracująca dorywczo'), (5, 'Osoba bezrobotna')], default=1)),
                ('education', models.PositiveSmallIntegerField(choices=[(1, 'Brak wykształcenia'), (2, 'Wykształcenie podstawowe'), (3, 'Wykształcenie gimnazjalne'), (4, 'Wykształcenie zasadnicze zawodowe'), (5, 'Wykształcenie branżowe'), (6, 'Wykształcenie średnie branżowe'), (7, 'Wykształcenie średnie'), (8, 'Wykształcenie wyższe')], default=1)),
                ('place_of_residence', models.PositiveSmallIntegerField(choices=[(1, 'Miasto powyżej 500 tys. mieszkańców'), (2, 'Miasto 200-499 tys. mieszkańców'), (3, 'Miasto 100-199 tys. mieszkańców'), (4, 'Miasto 50-99 tys. mieszkańców'), (5, 'Miasto poniżej 50 tys. mieszkańców'), (6, 'Wieś')], default=6)),
                ('citizenship', models.PositiveSmallIntegerField(choices=[(1, 'Polskie'), (2, 'Inne')], default=1)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
